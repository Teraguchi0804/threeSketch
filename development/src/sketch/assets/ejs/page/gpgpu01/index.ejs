<%
// variable
var ejsRoot = '../../';
var page = 'gpgpu01';
%>
<!DOCTYPE html>
<html lang="ja">
<head>
    <%- include(ejsRoot + 'inc/_meta', {data:data,meta:data[page]}); %>
    <%- include(ejsRoot + 'inc/_style'); %>
    <link href="/sketch/assets/css/top/style.css" rel="stylesheet" class="stylesheet">
    <%- include(ejsRoot + 'inc/_script'); %>
    <script type='text/javascript' src='/sketch/assets/js/main.js'></script>

    <!-- Fragment shader for protoplanet's position -->
    <script id="computeShaderPosition" type="x-shader/x-fragment">
            // 現在の位置情報を決定する
            #define delta ( 1.0 / 60.0 )
            void main() {
                vec2 uv = gl_FragCoord.xy / resolution.xy;
                vec4 tmpPos = texture2D( texturePosition, uv );
                vec3 pos = tmpPos.xyz;
                vec4 tmpVel = texture2D( textureVelocity, uv );
                // velが移動する方向(もう一つ下のcomputeShaderVelocityを参照)
                vec3 vel = tmpVel.xyz;

                // 移動する方向に速度を掛け合わせた数値を現在地に加える。
                pos += vel * delta;
                gl_FragColor = vec4( pos, 1.0 );
            }
        </script>

    <!-- Fragment shader for protoplanet's velocity -->
    <script id="computeShaderVelocity" type="x-shader/x-fragment">

            // 移動方向についていろいろ計算できるシェーダー。
            // 今回はなにもしてない。
            // ここでVelのx y zについて情報を上書きすると、それに応じて移動方向が変わる
            #include <common>

            void main() {
                vec2 uv = gl_FragCoord.xy / resolution.xy;
                float idParticle = uv.y * resolution.x + uv.x;
                vec4 tmpVel = texture2D( textureVelocity, uv );
                vec3 vel = tmpVel.xyz;

                gl_FragColor = vec4( vel.xyz, 1.0 );
            }
        </script>

</head>
<body id="<%- page %>" class="<%- page %>" data-id="<%- page %>">

<div id="wrapper">
    <div id="inner">

        <%- include('./_section01', {data:data,page:page}); %>

    </div>
</div>

</body>
</html>
